#!/usr/bin/sbcl --script

(load "~/quicklisp/setup.lisp")
(ql:setup)

(ql:quickload 'clim-gopher)
(ql:quickload 'net.didierverna.clon)

(net.didierverna.clon:nickname-package)

(net.didierverna.clon:defsynopsis ()
  (text :contents "A small graphical Gopher Browser to surf gopherspace")
  (group (:header "Options:")
    (flag :short-name "h" :long-name "help"
          :description "Print this help and exit.")
    (stropt :short-name "r" :long-name "resources"
            :description "A path to the resource directory.")
    (stropt :short-name "u" :long-name "url"
            :description "A gopher URL to start on")))

(defun main ()
  (clon:make-context)
  (when (clon:getopt :short-name "h")
    (clon:help)
    (clon:exit))
;  (clon:do-cmdline-options (option name value source)
;    (print (list option name value source)))

  (let ((res-path (clon:getopt :short-name "r")))
    (if res-path
        (setf clim-gopher::*resource-path* res-path)
        (setf clim-gopher::*resource-path* (merge-pathnames #P"/res/"))))

      (let ((start-url (clon:getopt :short-name "u")))
        (if start-url
            (clim-gopher:browser :url start-url)
          (clim-gopher:browser))))


(save-lisp-and-die "gopher" :toplevel #'main :executable t :compression t :purify t
                   :save-runtime-options t)
